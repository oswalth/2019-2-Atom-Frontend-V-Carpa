{"version":3,"sources":["styles/detailView.module.css","styles/weather.module.css","utils/apiKey.js","actions/fetchWeather.js","components/form.component.jsx","utils/findMe.js","utils/convertUnits.js","components/WeatherCard.component.jsx","components/weather.component.jsx","components/mainForm.component.jsx","components/detailView.component.jsx","App.js","serviceWorker.js","reducers/weather.reducer.js","reducers/reducers.js","store/store.js","index.js","styles/weatherCard.module.css"],"names":["module","exports","API_KEY","fetchWeather","arg","method","dispatch","prefix","postfix","latitude","longitude","city","axios","then","response","data","weather","type","payload","catch","err","console","log","Form","props","loadWeather","className","onSubmit","event","preventDefault","target","elements","value","placeholder","name","onClick","callbackSucces","callbackError","navigator","geolocation","getCurrentPosition","enableHighAccuracy","maximumAge","timeout","findMe","position","coords","kelvinToCelsius","Math","floor","WeatherCard","info","isDetail","time","Date","dt_txt","toLocaleString","styles","cardContainer","upper","upperLeft","sys","country","upperRight","main","temp","lower","humidity","to","id","Weather","weatherInfo","length","weathers","map","idx","key","containerW","weatherList","MainForm","loadFavs","forEach","fav","this","weatherinfo","React","Component","connect","state","WeatherInfo","actions","DetailView","useState","setData","cityId","match","params","useEffect","res","list","slice","wrapper","App","basename","process","exact","path","component","Main","Boolean","window","location","hostname","action","flag","reducers","combineReducers","middleWare","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dde3320e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"detailView_wrapper__KyF-P\",\"containerW\":\"detailView_containerW__25jiu\",\"weatherList\":\"detailView_weatherList__1f-Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerW\":\"weather_containerW__3hAFQ\",\"weatherList\":\"weather_weatherList__18b1V\"};","export const API_KEY = 'a2df596b1f176ee0d6618cf361f63153';","import axios from 'axios'\nimport {API_KEY} from '../utils/apiKey'\n\n\nexport const fetchWeather = (arg, method) => (dispatch) => {\n    const prefix = `https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY  }&`\n    let postfix = '';\n    if (method === 'byGeolocation') {\n        postfix = `lat=${arg.latitude}&lon=${arg.longitude}`\n    } else if (method === 'byCity'){\n        postfix = `q=${arg.city}`\n    }\n    axios(prefix + postfix)\n    .then((response) => {\n        return response.data\n    })\n    .then((weather) => {\n        dispatch({type: \"FETCH_WEATHER\", payload: weather});\n    })\n    .catch((err) => {\n        console.log(err)\n    })\n}\n\n","import React from 'react'\nimport findMe from '../utils/findMe'\n\n\nconst Form = (props) => {\n    const { loadWeather } = props;\n    const processSubmit = (event) => {\n        event.preventDefault()\n        const { city }= event.target.elements;\n        const arg = {\n            city: city.value\n        }   \n        loadWeather(arg, 'byCity')\n    } \n    \n    return (\n        <div className='container'>\n            <form onSubmit={processSubmit}>\n                <input \n                    type='text'\n                    placeholder='City'\n                    name='city'\n                ></input>\n                <button>+</button>\n                <button \n                    type='button'\n                    onClick={() => {\n                        findMe((position) => {\n                            const method = 'byGeolocation'\n                            loadWeather(position.coords, method)\n                        })\n                    }}\n                >Geo</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;","export default function findMe(callbackSucces, callbackError = null) {\n    if ('geolocation' in navigator){\n        const getOptions = {\n            enableHighAccuracy: true,\n            maximumAge: 30000,\n            timeout: 27000\n        };\n\n        navigator.geolocation.getCurrentPosition(\n            callbackSucces,\n            callbackError,\n            getOptions\n        );\n    } else if  (callbackError) { callbackError('Permission denied');}\n}","export default function kelvinToCelsius(value) {\n    return Math.floor(value - 273.15)\n}","import React from 'react'\nimport kelvinToCelsius from '../utils/convertUnits'\nimport styles from '../styles/weatherCard.module.css'\nimport { Link } from 'react-router-dom'\n//import getImg from '../utils/getImg'\n\n\nconst WeatherCard = (props) => {\n    const { info, isDetail } = props;\n    const time = (new Date(info.dt_txt)).toLocaleString('ru-RU');\n    \n    if (isDetail) {\n        return (\n            <div className={styles.cardContainer}>\n                <div className={styles.upper}>\n                    <div className={styles.upperLeft}>\n                        <div className=\"city\">{info.name}</div>\n                        <div className=\"cityCountry\">{info.name}, {info.sys.country}</div>\n                    </div>\n                    <div className={styles.upperRight}>\n                        <div className=\"weatherIcon\"></div>\n                        <div className=\"temperature\">{kelvinToCelsius(info.main.temp)}&deg;</div>\n                    </div>\n                </div>\n                <div className={styles.lower}>\n                    <div className=\"left\">{info.main.humidity}%</div>\n                    <div className=\"right\">{info.dt_txt ? time : null}</div>\n                </div>\n            </div> \n        )\n    } \n    return(\n        <Link to={`/location/${info.id}`}>\n            <div className={styles.cardContainer}>\n                    <div className={styles.upper}>\n                        <div className={styles.upperLeft}>\n                            <div className=\"city\">{info.name}</div>\n                            <div className=\"cityCountry\">{info.name}, {info.sys.country}</div>\n                        </div>\n                        <div className={styles.upperRight}>\n                            <div className=\"weatherIcon\"></div>\n                            <div className=\"temperature\">{kelvinToCelsius(info.main.temp)}&deg;</div>\n                        </div>\n                    </div>\n                    <div className={styles.lower}>\n                        <div className=\"left\">{info.main.humidity}%</div>\n                        <div className=\"right\">{info.dt_txt ? time : null}</div>\n                    </div>\n                </div> \n        </Link>\n    )\n}\n\nexport default WeatherCard","import React from 'react';\nimport WeatherCard from './WeatherCard.component'\nimport styles from '../styles/weather.module.css'\n\n\nconst Weather = (props) => {\n    const { weatherInfo } = props\n    if (weatherInfo.length) {\n        const weathers = weatherInfo.map((weather, idx) => {\n            return <WeatherCard key={idx} info={weather}/>\n        });\n        return(\n            <div className={styles.containerW}>\n                <div className={styles.weatherList}>\n                    {weathers}\n                </div>\n                \n            </div>\n        )    \n    }\n    return null \n}\n\nexport default Weather;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/fetchWeather'\nimport Form from './form.component'\nimport Weather from './weather.component'\n\n\nclass MainForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.loadFavs()\n    }\n\n    loadFavs() {\n        const favs = ['Novinki', 'Comrat', 'Sofia'];\n        favs.forEach((fav) => {\n\n            this.props.loadWeather({city: fav}, 'byCity')\n        })\n    }\n\n    render() {\n        return(\n            <div className='container'>\n                <Form loadWeather={this.props.loadWeather}/>\n                <Weather weatherInfo={this.props.weatherInfo.weatherinfo}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    weatherInfo: state.WeatherInfo\n  })\n  \nconst mapDispatchToProps = (dispatch) => ({\nloadWeather: (arg, method) => dispatch(actions.fetchWeather(arg, method))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainForm);","import React from 'react'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport kelvinToCelsius from '../utils/convertUnits'\nimport {API_KEY} from '../utils/apiKey'\nimport WeatherCard from './WeatherCard.component'\nimport styles from '../styles/detailView.module.css'\n\n\nconst DetailView = (props) => {\n    const [data, setData] = useState(null)\n    const cityId = props.match.params.id;\n    useEffect(() => {\n        axios(`https://api.openweathermap.org/data/2.5/forecast?id=${cityId}&appid=${API_KEY}`)\n        .then((res) => {\n          setData(res.data)\n        })\n    }, [cityId]) \n\n    if (data === null) {\n        return null;    \n    }\n\n    const weathers = data.list.slice(0,5).map((weather, idx) => {\n        weather.name = data.city.name\n        weather.sys.country = data.city.country\n        return <WeatherCard key={idx} info={weather} isDetail={true}/>\n    });\n    \n    return(\n        <div className={styles.wrapper}>\n            <div className=\"detailsContainer\">\n                <div className=\"city\">{data.city.name}, {data.city.country}</div>\n                <div className=\"temp\">{kelvinToCelsius(data.list[0].main.temp)}&deg;</div>\n            </div>\n            <div className={styles.containerW}>\n                <div className={styles.weatherList}>\n                    {weathers}\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default DetailView","import React from 'react';\nimport './App.css';\nimport Main from './components/mainForm.component'\nimport DetailView from './components/detailView.component'\nimport { BrowserRouter as Router, Route } from 'react-router-dom' \nimport * as actions from './actions/fetchWeather'\nimport { connect } from 'react-redux';\n\n\nclass App extends React.Component{\n\n  render() {\n    console.log()\n    return (\n        <div className=\"App\">   \n          <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path='/' component={Main}/> \n            <Route path='/location/:id' component={DetailView}/>\n          </Router>\n        </div>      \n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  weatherInfo: state.WeatherInfo\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadWeather: (arg, method) => dispatch(actions.fetchWeather(arg, method))\n  })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const weatherInfo = (state = {\n    weatherinfo: []\n}, action) => {\n    if (action.type === 'FETCH_WEATHER'){\n        let flag = false;\n        state.weatherinfo.forEach((weather) => {\n          if (weather && weather.id === action.payload.id) {\n            flag = true\n          }\n        })\n        if (!flag) {\n          state = {...state, weatherinfo: [...state.weatherinfo, action.payload]}\n        }\n    }\n    return state;\n}\n\nexport default weatherInfo;\n","import { combineReducers } from 'redux';\nimport weatherInfo from './weather.reducer';\n\nconst reducers = combineReducers({\n    WeatherInfo: weatherInfo\n});\n\nexport default reducers;","import thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport reducers from '../reducers/reducers'\n\nconst middleWare = applyMiddleware(thunk);\n\nconst store = createStore(reducers, middleWare)\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"weatherCard_cardContainer__3gGeO\",\"upper\":\"weatherCard_upper__jmty2\",\"upperLeft\":\"weatherCard_upperLeft__1YonX\",\"upperRight\":\"weatherCard_upperRight__2PLff\"};"],"sourceRoot":""}